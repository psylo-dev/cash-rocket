name: Build and Deploy Cash Rocket

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-apk:
    name: Build Android APK
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Java (required for Android builds)
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Set up Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'
          channel: 'stable'

      # Step 4: Install dependencies
      - name: Install dependencies
        run: flutter pub get

      # Step 5: Build the APK with custom filename
      - name: Build APK
        env:
          USERNAME: ${{ github.actor }}  # GitHub username of the actor
          DATE: ${{ env.DATE || 'date +%Y%m%d' }}  # Fallback to command
        run: |
          DATE=$(date +%Y%m%d)
          flutter build apk --release
          mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/app-release-${USERNAME}-${DATE}.apk

      # Step 6: Upload the APK as an artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release-${{ github.actor }}-$(date +%Y%m%d).apk
          retention-days: 7

  deploy-web:
    name: Deploy Web Version
    runs-on: ubuntu-latest
    needs: build-apk  # Ensure APK build completes first
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'
          channel: 'stable'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: flutter pub get

      # Step 4: Build the web app
      - name: Build Web
        run: flutter build web --release

      # Step 5: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build/web
          destination_dir: .  # Deploy to the root of the gh-pages branch
